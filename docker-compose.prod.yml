services:
  reverse-proxy:
    image: traefik:latest
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=abfinnegan@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock

  postgres:
    image: postgres:15
    restart: unless-stopped
    container_name: postgres-db
    environment:
      POSTGRES_USER: springreader
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
      POSTGRES_DB: springreaderdb
    ports:
      - "5431:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    secrets:
      - db-password

  backend:
    restart: unless-stopped
    build:
      context: ./SpringReader
      dockerfile: Dockerfile
    container_name: backend-app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/springreaderdb
      SPRING_DATASOURCE_USERNAME: springreader
      BOOKS_UPLOAD_DIR: /uploads
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    volumes:
      - uploads:/uploads
    secrets:
      - db-password
      - jwt-secret
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`librium.dev`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entryPoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      - "traefik.http.routers.backend.priority=100"

  frontend:
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`librium.dev`) && PathPrefix(`/`)"
      - "traefik.http.routers.frontend.entryPoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.routers.frontend.priority=50"
    build:
      context: ./Frontend
      dockerfile: Dockerfile.prod
      args:
        VITE_API_URL: "https://librium.dev/api"
    container_name: frontend-app
    ports:
      - "80:80"
    depends_on:
      - backend

volumes:
  postgres_data:
  uploads:
  letsencrypt:

secrets:
  db-password:
    file: ./db/password.txt
  jwt-secret:
    file: ./jwt-secret.txt

